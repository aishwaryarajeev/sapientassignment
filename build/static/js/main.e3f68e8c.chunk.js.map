{"version":3,"sources":["constants.js","components/Launch/Launch.js","components/Launches/Launches.js","components/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["FILTERS_CATEGORY","CARD_TITLES","BOOLEAN_BUTTONS","useStyles","makeStyles","root","margin","width","height","flex","img","backgroundColor","missionID","fontWeight","fontSize","values","color","padding","heading","marginBottom","listItems","marginLeft","Launch","mission","flight_number","mission_name","launch_year","launch_success","mission_id","links","land_success","rocket","first_stage","cores","classes","Card","className","CardContent","Typography","src","mission_patch_small","alt","CONSTANTS","map","title","index","key","length","id","toString","renderValues","loader","display","justifyContent","container","flexWrap","Launches","endPoint","useState","initialData","setInitialData","useEffect","fetch","then","res","json","data","catch","console","log","data-testid","mainContainer","maxWidth","header","itemContainer","flexDirection","alignItems","filters","position","background","borderRadius","launchItems","filterTitle","textAlign","content","left","borderBottom","filterItems","buttonStyle","border","buttonClickedStyle","footer","footerLabel","HomePage","setEndPoint","selection","setSelection","filterContent","React","useCallback","baseEndPoint","parseInt","handleClick","e","targetID","target","targetValue","value","renderYearFilter","fieldName","start","end","Array","from","v","k","year","onClick","renderFilter","renderItems","App","Boolean","window","location","hostname","match","ReactDOM","hydrate","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e3f68e8c.chunk.js","sourcesContent":["export const AUTHOR = \"Aishwarya Rajeev\";\nexport const FILTERS_CATEGORY = [\n  \"Launch Year\",\n  \"Successful Launch\",\n  \"Successful Landing\",\n];\nexport const ACTION_CATEGORY = {\n  \"Launch Year\": \"launch_year\",\n  \"Successful Launch\": \"launch_success\",\n  \"Successful Landing\": \"land_success\",\n};\n\nexport const CARD_TITLES = [\"Mission Ids\", ...FILTERS_CATEGORY];\n\nexport const BOOLEAN_BUTTONS = [\"True\", \"False\"];\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport * as CONSTANTS from \"../../constants\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"5px\",\n    width: \"210px\",\n    height: \"auto\",\n    \"@media (min-width: 701px) and (max-width: 1024px) \": {\n      flex: \"0 0 33%\",\n      margin: \"2% 5%\",\n    },\n    \"@media (min-width: 1025px) and (max-width: 1440px) \": {\n      flex: \"0 0 20%\",\n      margin: \"2%\",\n    },\n  },\n  img: {\n    backgroundColor: \"#e6e6e6\",\n  },\n  missionID: {\n    fontWeight: 600,\n    fontSize: \"14px\",\n  },\n  values: {\n    margin: 0,\n    fontSize: \"13px\",\n    color: \"#002b80\",\n    padding: \"0px 8px\",\n  },\n  heading: {\n    marginBottom: \"8px\",\n    fontSize: \"12px\",\n    fontWeight: 600,\n    color: \"#002b80\",\n  },\n  listItems: {\n    marginLeft: \"25px\",\n  },\n});\n\nexport const Launch = ({ mission }) => {\n  const {\n    flight_number,\n    mission_name,\n    launch_year,\n    launch_success,\n    mission_id,\n    links,\n    rocket,\n  } = mission;\n  let { land_success } = rocket.first_stage.cores[0];\n  const classes = useStyles();\n  const renderValues = (title) => {\n    switch (title) {\n      case CONSTANTS.CARD_TITLES[1]:\n        return launch_year;\n      case CONSTANTS.CARD_TITLES[2]:\n        return launch_success !== null ? launch_success.toString() : \"NA\";\n      case CONSTANTS.CARD_TITLES[3]:\n        return land_success !== null ? land_success.toString() : \"NA\";\n      default:\n        return;\n    }\n  };\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.img}>\n          <img src={links.mission_patch_small} alt=\"mission\" width=\"100%\" />\n        </Typography>\n        <Typography className={classes.heading}>\n          {mission_name}#{flight_number}\n        </Typography>\n        <Typography>\n          {CONSTANTS.CARD_TITLES.map((title, index) => {\n            return (\n              <div>\n                <span key={index} className={classes.missionID}>\n                  {title}:\n                </span>\n                {index === 0 ? (\n                  <div>\n                    {mission_id.length > 0 ? (\n                      mission_id.map((id) => {\n                        return (\n                          <ul key={id} className={classes.values}>\n                            <li className={classes.listItems} key={id}>\n                              {id}\n                            </li>\n                          </ul>\n                        );\n                      })\n                    ) : (\n                      <span className={classes.values}>\n                        No mission id found\n                      </span>\n                    )}\n                  </div>\n                ) : (\n                  <span className={classes.values}>{renderValues(title)}</span>\n                )}\n              </div>\n            );\n          })}\n        </Typography>{\" \"}\n      </CardContent>\n    </Card>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport Launch from \"../Launch\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  loader: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  root: {\n    width: \"fit-content\",\n    margin: \"10px\",\n  },\n  container: {\n    width: \"100%\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n  img: {\n    backgroundColor: \"#e6e6e6\",\n  },\n  missionID: {\n    fontWeight: 600,\n    fontSize: \"14px\",\n  },\n  values: {\n    margin: 0,\n    fontSize: \"13px\",\n    color: \"#002b80\",\n  },\n  heading: {\n    marginBottom: \"12px\",\n    fontSize: \"12px\",\n    fontWeight: 600,\n    color: \"#002b80\",\n  },\n});\n\nexport const Launches = ({ endPoint }) => {\n  const [initialData, setInitialData] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetch(endPoint)\n      .then((res) => res.json())\n      .then((data) => {\n        setInitialData(data);\n      })\n      .catch(console.log);\n  }, [endPoint]);\n  return (\n    initialData.length > 0 && (\n      <div className={classes.container}>\n        {initialData.map((data) => {\n          return (\n            <Launch\n              data-testid=\"Launch\"\n              key={data.flight_number}\n              mission={data}\n            />\n          );\n        })}\n      </div>\n    )\n  );\n};\n","import React, { useState } from \"react\";\nimport Launches from \"../Launches\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as CONSTANTS from \"../../constants\";\n\nexport const useStyles = makeStyles(() => ({\n  mainContainer: {\n    height: \"100%\",\n    maxWidth: \"1440px\",\n    backgroundColor: \"#e6e6e6\",\n    margin: \"auto\",\n    \"@media (max-width: 700px) \": {\n      width: \"min-content\",\n      margin: \"25px auto\",\n    },\n  },\n  header: {\n    fontSize: \"20px\",\n    fontWeight: 600,\n    padding: \"5px 10px\",\n  },\n  itemContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    \"@media (max-width: 700px) \": {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  },\n  filters: {\n    position: \"relative\",\n    width: \"200px\",\n    background: \"white\",\n    height: \"550px\",\n    margin: \"5px 10px\",\n    borderRadius: \"5px\",\n    fontWeight: 600,\n    padding: \"5px\",\n    fontSize: \"14px\",\n  },\n  launchItems: {\n    width: \"75%\",\n    \"@media (max-width: 700px) \": {\n      width: \"220px\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  },\n  filterTitle: {\n    textAlign: \"center\",\n    fontSize: \"12px\",\n    fontWeight: 400,\n    padding: \"5px\",\n    \"&:after\": {\n      content: '\" \"',\n      position: \"absolute\",\n      left: \"40px\",\n      width: \"125px\",\n      height: \"18px\",\n      borderBottom: \"1px solid grey\",\n    },\n  },\n  filterItems: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n  buttonStyle: {\n    borderRadius: \"5px\",\n    background: \"#95d095\",\n    height: \"25px\",\n    width: \"65px\",\n    border: \"none\",\n    margin: \"8px 13px\",\n    \"&:hover\": {\n      backgroundColor: \"#4CAF50\",\n    },\n  },\n  buttonClickedStyle: {\n    backgroundColor: \"#4CAF50\",\n  },\n  footer: {\n    textAlign: \"center\",\n    fontSize: \"14px\",\n    width: \"100%\",\n    margin: \"20px 0\",\n  },\n  footerLabel: {\n    fontWeight: 600,\n  },\n}));\n\nexport const HomePage = () => {\n  const [endPoint, setEndPoint] = useState(\n    \"https://api.spaceXdata.com/v3/launches?limit=100\"\n  );\n  const [selection, setSelection] = useState({\n    launch_success: false,\n    land_success: false,\n    launch_year: 0,\n  });\n  const classes = useStyles();\n\n  const yearRange = (start, end) => {\n    return Array.from({ length: end - start + 1 }, (v, k) => k + start);\n  };\n  const filterContent = React.useCallback(() => {\n    const baseEndPoint = \"https://api.spaceXdata.com/v3/launches?limit=100\";\n    switch (true) {\n      case selection.launch_success &&\n        selection.land_success &&\n        parseInt(selection.launch_year) !== 0:\n        setEndPoint(\n          baseEndPoint +\n            `&launch_success=true&land_success=true&launch_year=${selection.launch_year}`\n        );\n        break;\n      case selection.launch_success && selection.land_success:\n        setEndPoint(baseEndPoint + \"&launch_success=true&land_success=true\");\n        break;\n      case selection.launch_success:\n        setEndPoint(baseEndPoint + \"&launch_success=true\");\n        break;\n\n      default:\n        return baseEndPoint;\n    }\n  }, [selection]);\n  const handleClick = (e) => {\n    const targetID = e.target.id;\n    const targetValue = e.target.value;\n    if (targetID === \"Launch Year\" && targetValue > 0) {\n      setSelection({\n        ...selection,\n        launch_year: parseInt(targetValue),\n      });\n    } else if (targetID === \"Successful Launch\" && targetValue === \"True\") {\n      setSelection({\n        ...selection,\n        launch_success: true,\n      });\n    } else if (targetID === \"Successful Landing\" && targetValue === \"True\") {\n      setSelection({\n        ...selection,\n        land_success: true,\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    filterContent();\n  }, [filterContent]);\n  const renderYearFilter = (fieldName) => {\n    const yearRangeValues = yearRange(2006, 2020);\n    return yearRangeValues.map((year) => (\n      <button\n        className={classes.buttonStyle}\n        key={year}\n        value={year}\n        id={fieldName}\n        onClick={handleClick}\n      >\n        {year}\n      </button>\n    ));\n  };\n  const renderLaunchAndLandFilter = (fieldName) => {\n    return CONSTANTS.BOOLEAN_BUTTONS.map((value, index) => (\n      <button\n        className={classes.buttonStyle}\n        key={index}\n        value={value}\n        id={fieldName}\n        onClick={handleClick}\n      >\n        {value}\n      </button>\n    ));\n  };\n  const renderFilter = (title, renderItems) => (\n    <>\n      <div className={classes.filterTitle}>{title}</div>\n      <div className={classes.filterItems}>{renderItems}</div>\n    </>\n  );\n\n  return (\n    <>\n      {\" \"}\n      <div className={classes.mainContainer}>\n        <div className={classes.header}>SpaceX Launch Programs</div>\n        <div className={classes.itemContainer}>\n          <div className={classes.filters}>\n            Filters\n            {CONSTANTS.FILTERS_CATEGORY.map((value, index) =>\n              index === 0\n                ? renderFilter(value, renderYearFilter(value))\n                : renderFilter(value, renderLaunchAndLandFilter(value))\n            )}\n            {}\n          </div>\n          <div className={classes.launchItems}>\n            <Launches endPoint={endPoint} />\n          </div>\n        </div>\n        <div className={classes.footer}>\n          <span className={classes.footerLabel}> Developed by:</span>\n          {CONSTANTS.AUTHOR}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport HomePage from \"./components/HomePage\";\n\nconst App = () => {\n  return <HomePage />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.hydrate(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}